

Remarques:

- Le nom et prénom ne sont pas nécessaire ici on peut donc les supprimer.
- Le stock n'est pas nécessaire ici en décisionnel.
- Pour conserver le schéma en étoile, on met le groupe d'age directement dans "client".

Base de donnée:

CLIENT( num, nom, prenom, adresse, date_nais, sexe);
PRODUIT (num, designation, stock); 
PRIX_DATE (num, produit, date_du_prix, prix, remise); 
FACTURE ( num, client, date_etabli);
LIGNE_FACTURE (facture, produit, qte, id_prix);


Nouveau Data Warehouse :

V_Vente   (Produit, Qte, client, temps, lieu, prix, remise)
V_Date    (Num, jour, semaine, mois, annee)
V_Lieu    (Num, adresse, cp, ville, pays)
V_Produit (Num, designation, categorie, sous_categorie)
V_Client  (Num, date_naissance, age, groupe_age, sexe)


###################
###################  PAS DE CONTRAINTES SUR LES VUES POUR LE MOMENT (BESOIN?) (clé primaire/etrangere).
###################

---V_Produit (Num, designation, categorie, sous_categorie)
------------------------------------------------
Create materialized view v_produit
Build immediate
Enable query rewrite as
select num,
regexp_substr(designation,'[^.]+', 1, 1) as designation,
regexp_substr(designation,'[^.]+', 1, 2) as categorie,
regexp_substr(designation,'[^.]+', 1, 3) as sous_categorie
From produit;
------------------------------------------------
---
---V_Lieu    (Num, adresse, cp, ville, pays)
------------------------------------------------
Create materialized view v_lieu
Build immediate
Enable query rewrite as
select num,
regexp_substr(adresse,'[^,]+', 1, 1) as adresse,
regexp_substr(adresse,'[^,]+', 1, 2) as cp,
regexp_substr(adresse,'[^,]+', 1, 3) as ville,
regexp_substr(adresse,'[^,]+', 1, 4) as pays
From client;
------------------------------------------------
---
---V_Date    (Num, jour, semaine, mois, annee)
---QUERY REWRITE DESACTIVEE?
------------------------------------------------
Create materialized view v_date
Build immediate
--Enable query rewrite 
as
select num,
to_char(to_date(date_etabli),'DDD') as jour,
to_char(to_date(date_etabli),'IW') as semaine,
to_char(to_date(date_etabli),'MM') as mois,
to_char(to_date(date_etabli),'YYYY') as annee
From facture;
------------------------------------------------
---
---V_Client  (Num, date_naissance, age, groupe_age, sexe)
------------------------------------------------
Create materialized view v_client
Build immediate
--Enable query rewrite 
as
select num, 
date_naissance,
age,
case when age <30 then '<30 ans' 
     when age <45 then '30-45 ans'
     when age <60 then '46-60 ans'
     else '>60ans'
     end
     as groupe_age,
sexe
From
(
select num, 
date_nais as date_naissance,
trunc(months_between(sysdate,date_nais)/12) as age,
sexe
From client
);
------------------------------------------------
---
---V_Vente(Produit, Qte, client, temps, lieu, prix, remise)
------------------------------------------------
Create materialized view v_vente
Build immediate
Enable query rewrite as
select P.num as produit, 
qte, 
C.num as client, 
F.num as temps,
C.num as lieu,
prix as prix,
remise as remise
FROM LIGNE_FACTURE LF
JOIN FACTURE F ON F.num=LF.facture
JOIN PRODUIT P ON P.num=LF.produit
JOIN PRIX_DATE PD ON PD.num=LF.id_prix
JOIN CLIENT C ON C.num=F.client;
------------------------------------------------



---V_Produit (Num, designation, categorie, sous_categorie)

---V_Lieu    (Num, adresse, cp, ville, pays)

---V_Date    (Num, jour, semaine, mois, annee)

---V_Client  (Num, date_naissance, age, groupe_age, sexe)
ALTER MATERIALIZED VIEW V_CLIENT
  add constraint PK_V_CLIENT primary key(num)
;

---V_Vente(Produit, Qte, client, temps, lieu, prix, remise)
ALTER MATERIALIZED VIEW V_VENTE
  add constraint FK_V_VENTE_PRODUIT foreign key (Produit) REFERENCES V_PRODUIT(Num)
  add constraint FK_V_VENTE_CLIENT foreign key (client) REFERENCES V_CLIENT(Num)
  add constraint FK_V_VENTE_TEMPS foreign key (temps) REFERENCES V_DATE(Num)
  add constraint FK_V_VENTE_LIEU foreign key (lieu) REFERENCES V_LIEU(Num)
;



INSERT INTO CLIENT VALUES(client_seq.nextval,'Martin','Jean','232 rue de Paris,59000,Lille,France',	TO_DATE(TRUNC(DBMS_RANDOM.VALUE(2433283,2433283+40*364)),'J')	,'homme');

INSERT INTO CLIENT VALUES(client_seq.nextval,'Sarkozy','Nicolas','238 rue de Vaugirard,75015,Paris,France',TO_DATE('1955/01/28','yyyy/mm/dd'),'homme');





select constraint_name, constraint_type from user_constraints where table_name= 'v_produit';


column designation for A16
column categorie for A16
column sous_categorie for A16
select num,
regexp_substr(designation,'[^.]+', 1, 1) as designation,
regexp_substr(designation,'[^.]+', 1, 2) as categorie,
regexp_substr(designation,'[^.]+', 1, 3) as sous_categorie
From produit


column adresse for A16
column cp for A16
column ville for A16
column pays for A16
select num,
regexp_substr(adresse,'[^,]+', 1, 1) as adresse,
regexp_substr(adresse,'[^,]+', 1, 2) as cp,
regexp_substr(adresse,'[^,]+', 1, 3) as ville,
regexp_substr(adresse,'[^,]+', 1, 4) as pays
From client


--MIEU
select
num,
to_char(to_date(date_etabli),'DDD') as jour,
to_char(to_date(date_etabli),'IW') as semaine,
to_char(to_date(date_etabli),'MM') as mois,
to_char(to_date(date_etabli),'YYYY') as annee
from facture;




-- pas bon. need sous-requete?
select num, 
date_nais as date_naissance,
trunc(months_between(sysdate,date_nais)/12) as age,
case when age <30 then '<30 ans' 
     when age <45 then '30-45 ans'
     when age <60 then '46-60 ans'
     else '>60ans'
     end
     as groupe_age,
sexe
From client

select num, 
date_naissance,
age,
case when age <30 then '<30 ans' 
     when age <45 then '30-45 ans'
     when age <60 then '46-60 ans'
     else '>60ans'
     end
     as groupe_age,
sexe
From
(
select num, 
date_nais as date_naissance,
trunc(months_between(sysdate,date_nais)/12) as age,
sexe
From client
)




select P.num as produit, 
qte, 
C.num as client, 
F.num as temps,
C.num as lieu,
prix as prix,
remise as remise
FROM LIGNE_FACTURE LF
JOIN FACTURE F ON F.num=LF.facture
JOIN PRODUIT P ON P.num=LF.produit
JOIN PRIX_DATE PD ON PD.num=LF.id_prix
JOIN CLIENT C ON C.num=F.client











